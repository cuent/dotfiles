if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('{{ .chezmoi.homeDir }}/.vim/bundle')

" Navigation Plugins
Plug 'junegunn/fzf.vim'

" Language-Specific Plugins
Plug 'elixir-lang/vim-elixir'

" Testing Plugins
Plug 'janko-m/vim-test'

" Utility Plugins
Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'

Plug 'christoomey/vim-run-interactive'

" Add Linux support for fzf installation
" Detect common installation paths for fzf on macOS and Linux
if has('unix')
  if isdirectory("/usr/local/opt/fzf")
    Plug 'junegunn/fzf', { 'dir': '/usr/local/opt/fzf', 'do': './install --all' }
  elseif isdirectory("/home/linuxbrew/.linuxbrew/opt/fzf")
    Plug 'junegunn/fzf', { 'dir': '/home/linuxbrew/.linuxbrew/opt/fzf', 'do': './install --all' }
  else
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  endif
endif

Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/tComment'

" Python development
Plug 'vim-python/python-syntax'
Plug 'psf/black', { 'branch': 'stable' }

" Jupyter notebook support
Plug 'goerz/jupytext.vim'

" Remote file management
Plug 'tpope/vim-vinegar'

" TensorBoard integration
Plug 'lambdalisue/vim-tensorboard'

if g:has_async
  Plug 'dense-analysis/ale'
endif

call plug#end()
